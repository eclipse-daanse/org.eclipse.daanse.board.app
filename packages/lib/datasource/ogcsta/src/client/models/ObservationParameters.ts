/* tslint:disable */
/* eslint-disable */
/**
 * British Geological Survey Sensors API
 * The British Geological Survey (BGS) Sensor API uses Version v1.1 of the OGC SensorThings API.<br><br> Paths/Endpoints that are not currently in use have been excluded, i.e. those relating to Actuators, MultiDatastreams, Tasks and TaskingCapabilities.<br><br> HistoricalLocations have also been removed.<br><br>
 *
 * The version of the OpenAPI document: 0.1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime'

/**
 *
 * @export
 * @interface ObservationParameters
 */
export interface ObservationParameters {
  /**
   * The Id of the record in the BGS Sensor Database that is the source of information for the observation (SEN_SENSOR_DATA.sensor_data_id)
   * @type {string}
   * @memberof ObservationParameters
   */
  senId?: string;
  /**
   * A flag to indicate whether details of this observation can be publicly released (set to Y or N)
   * @type {string}
   * @memberof ObservationParameters
   */
  publishYn?: string;
}

/**
 * Check if a given object implements the ObservationParameters interface.
 */
export function instanceOfObservationParameters(value: object): value is ObservationParameters {
  return true
}

export function ObservationParametersFromJSON(json: any): ObservationParameters {
  return ObservationParametersFromJSONTyped(json, false)
}

export function ObservationParametersFromJSONTyped(json: any, ignoreDiscriminator: boolean): ObservationParameters {
  if (json == null) {
    return json
  }
  return {

    'senId': json['sen_id'] == null ? undefined : json['sen_id'],
    'publishYn': json['publish_yn&quot;'] == null ? undefined : json['publish_yn&quot;']
  }
}

export function ObservationParametersToJSON(json: any): ObservationParameters {
  return ObservationParametersToJSONTyped(json, false)
}

export function ObservationParametersToJSONTyped(value?: ObservationParameters | null, ignoreDiscriminator: boolean = false): any {
  if (value == null) {
    return value
  }

  return {

    'sen_id': value['senId'],
    'publish_yn&quot;': value['publishYn']
  }
}

