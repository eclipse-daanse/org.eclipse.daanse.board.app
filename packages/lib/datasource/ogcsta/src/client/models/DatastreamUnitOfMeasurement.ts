/* tslint:disable */
/* eslint-disable */
/**
 * British Geological Survey Sensors API
 * The British Geological Survey (BGS) Sensor API uses Version v1.1 of the OGC SensorThings API.<br><br> Paths/Endpoints that are not currently in use have been excluded, i.e. those relating to Actuators, MultiDatastreams, Tasks and TaskingCapabilities.<br><br> HistoricalLocations have also been removed.<br><br>
 *
 * The version of the OpenAPI document: 0.1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime'

/**
 *
 * @export
 * @interface DatastreamUnitOfMeasurement
 */
export interface DatastreamUnitOfMeasurement {
  /**
   * The full name of the unit of measurement
   * @type {string}
   * @memberof DatastreamUnitOfMeasurement
   */
  name?: string;
  /**
   * The symbol of the unit of measurement
   * @type {string}
   * @memberof DatastreamUnitOfMeasurement
   */
  symbol?: string;
  /**
   * A URI for the unit of measurement providing a representation of its definition, ideally following the Unified Code for Unit of Measure (UCUM)
   * @type {string}
   * @memberof DatastreamUnitOfMeasurement
   */
  defintion?: string;
}

/**
 * Check if a given object implements the DatastreamUnitOfMeasurement interface.
 */
export function instanceOfDatastreamUnitOfMeasurement(value: object): value is DatastreamUnitOfMeasurement {
  return true
}

export function DatastreamUnitOfMeasurementFromJSON(json: any): DatastreamUnitOfMeasurement {
  return DatastreamUnitOfMeasurementFromJSONTyped(json, false)
}

export function DatastreamUnitOfMeasurementFromJSONTyped(json: any, ignoreDiscriminator: boolean): DatastreamUnitOfMeasurement {
  if (json == null) {
    return json
  }
  return {

    'name': json['name'] == null ? undefined : json['name'],
    'symbol': json['symbol'] == null ? undefined : json['symbol'],
    'defintion': json['defintion'] == null ? undefined : json['defintion']
  }
}

export function DatastreamUnitOfMeasurementToJSON(json: any): DatastreamUnitOfMeasurement {
  return DatastreamUnitOfMeasurementToJSONTyped(json, false)
}

export function DatastreamUnitOfMeasurementToJSONTyped(value?: DatastreamUnitOfMeasurement | null, ignoreDiscriminator: boolean = false): any {
  if (value == null) {
    return value
  }

  return {

    'name': value['name'],
    'symbol': value['symbol'],
    'defintion': value['defintion']
  }
}

